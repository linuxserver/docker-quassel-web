#!/usr/bin/with-contenv bash

# permissions function
chownfiles () {
  echo "[cont-init.d] setting file permissions this may take some time ..."
  chown -R abc:abc \
    /app/quassel-web \
    /config
}

# The user has defined QUASSEL_CORE use env settings
if [ "${QUASSEL_CORE+x}" ]; then
  echo "[cont-init.d] QUASSEL_CORE set, injecting env variables into settings.js"
  # Env variable validation
  VARS=( \
  QUASSEL_PORT \
  HTTPS
  )
  for i in "${VARS[@]}"; do
    if [ -z ${!i+x} ]; then
      echo "[cont-init.d] ${i} is required to setup container with env variables falling back to config file"
      [[ ! -f /config/settings-user.js ]] && \
        cp -pr /app/quassel-web/settings.js /config/settings-user.js
      chownfiles
      exit 0
    fi
  done
  cp -pr /app/quassel-web/settings.js /app/quassel-web/settings-env.js
  # Env variable injection
    sed -i \
      -e "s#host:.*//#host: '${QUASSEL_CORE}', //#g" \
      -e "s#port:.*,// quasselcore#port: ${QUASSEL_PORT}, // quasselcore#g" \
      -e "s#forcedefault:.*//#forcedefault: true, //#g" \
      /app/quassel-web/settings-env.js && \
  [[ "${URL_BASE+x}" ]] && \
    sed -i "s#prefixpath:.*//#prefixpath: \'${URL_BASE}\', //#g" \
    /app/quassel-web/settings-env.js
  if [ "${HTTPS}" == "true" ];then
    sed -i \
      -e "s#mode:.*// can be 'http'#mode: 'https', // can be 'http'#g" \
      -e "s#port:.*// Port on which to listen#port: 64443, // Port on which to listen#g" \
      /app/quassel-web/settings-env.js
  else
    sed -i \
      -e "s#mode:.*// can be 'http'#mode: 'http', // can be 'http'#g" \
      -e "s#port:.*// Port on which to listen#port: 64080, // Port on which to listen#g" \
      /app/quassel-web/settings-env.js
  fi
# The user is not using env variables copy a default file if it does not exist
else
  [[ ! -f /config/settings-user.js ]] && \
    echo "[cont-init.d] QUASSEL_CORE is not set, you will need to manually modify /config/settings-user.js"
    cp -pr /app/quassel-web/settings.js /config/settings-user.js
fi

chownfiles
